{{> _header title="Contributing" navigation=global.navigation }}

<section>
	<h2>Who can contribute</h2>
	<p>Everyone can contribute. No specific team is the owner of this project and everyone is encouraged to improve and expand it.</p>
</section>

<section>
	<h2>How to report issues</h2>
	<p>
		To report an issue please create Jira ticket in the MAIN project and select Design System component.
		You're free and encouraged to fix the bug yourself.
	</p>
</section>

<section>
	<h2>How to develop</h2>
	<p>If you want to contribute to DS follow the steps:</p>
	<ul>
		<li>Clone <a href="https://github.com/Wikia/design-system" target="_blank">Design System</a> repository</li>
		<li>Install dependencies with <code class="format-code">npm run setup</code></li>
		<li>Run <code class="format-code">npm run dev</code> to build the Reference Page and start file watchers</li>
		<li>Open <a href="http://localhost:4200" target="_blank">http://localhost:4200</a> to see the Reference Page</li>
		<li>Modify the Design System or Reference Page source files as you see fit, Ember CLI will rebuild the RP app and reload the page</li>
		<li>If you want to present the results of your work using devbox see "How to deploy Reference Page to devbox" section below</li>
		<li>If you want to release your change see <strong>[PUT A LINK HERE]</strong></li>
	</ul>
</section>

<section>
	<h2>How to add new page to Reference Page</h2>
	<ul>
		<li>Add entry to <code class="format-code">app/router.js</code></li>
		<li>Add entry to navigation object in <code class="format-code">app/controllers/application.js</code></li>
		<li>Create template file in <code class="format-code">app/templates/</code>(file path have to match route)</li>
	</ul>
</section>

<section>
	<h2>How to deploy Reference Page to devbox</h2>
	<p>
		You can present your work on Reference Page by deploying it to your devbox. To do so you can use
		<code class="format-code">deploy-debox.sh</code> script which will make the Reference Page available on
		<code class="format-code">http://dev-developer/design-system/</code>.
	</p>

	<p>How to use the script:</p>
	{{#code-sample}}
./deploy-devbox.sh -h dev-developer
sh deploy-devbox.sh -h dev-developer
sh deploy-devbox.sh -h dev-developer -u developer
	{{/code-sample}}

	<p>
		It builds the app and uses <code class="format-code">scp</code> to send the files to devbox.
		If you have configured the SSH keys in your system then no additional authorization is required.
		If you haven't then you will need to use your password.
	</p>

	<p>Parameters:</p>
	<ul>
		<li><code class="format-code">-h host</code> - devbox name i.e. <code class="format-code">dev-developer</code> <b>(required)</b></li>
		<li><code class="format-code">-u username</code> - devbox username (optional, needed if you didn't configure SSH keys and have a different username locally than on devbox)</li>
	</ul>
</section>

<section>
	<h2>Repository structure</h2>
	<ul>
		<li>
			<code class="format-code">app</code> - source files for Ember Reference Page application.
			You will need to edit them when modifying the RP. See "Repository APP (Reference Page) structure" section below
		</li>
		<li><code class="format-code">config</code> - configuration for Reference Page. It's unlikely that you will need to touch it.</li>
		<li>
			<code class="format-code">dist</code> - Design System distributable files.
			This is the only directory that you will get when installing DS using Bower.
			It shouldn't be modified manually as it's built by Ember CLI when using <code class="format-code">npm run build</code>.
		</li>
		<li>
			<code class="format-code">docs</code> - built and ready to use Reference Page. This is what GitHub Pages display on
			<a href="http://fandomdesignsystem.com">fandomdesignsystem.com</a> (using version from the master branch).
		</li>
		<li>
			<code class="format-code">docs-dev</code> - development version of Reference Page.
			It's built when using npm run dev and is accessible on <a href="http://localhost:4200" target="_blank">http://localhost:4200</a>.
		</li>
		<li><code class="format-code">lib</code> - Ember's in-repo addons</li>
		<li>
			<code class="format-code">lib/wds-components</code> - Ember components that wrap Design System
			components. Consider using them instead of the pure HTML when there is logic involved.
			It's currently an in-repo addon but it's possible to extract it to a separate addon and reuse in all Ember apps.
		</li>
		<li><code class="format-code">public</code> - contents of this directory are copied to Reference Page assets during the build.</li>
		<li><code class="format-code">style-guide</code> - source files for Design System. This is what gets compiled to dist.</li>
		<li><code class="format-code">ember-cli-build.js</code> - configuration file for the Ember CLI which is our build pipeline.</li>
	</ul>
</section>

<section>
	<h2>Repository APP (Reference Page) structure</h2>
	<ul>
		<li>
			<code class="format-code">components</code> - Definitions of RP-only components, see
			<a href="http://emberjs.com/api/classes/Ember.Component.html" target="_blank">Ember.Component</a>
			and <a href="https://guides.emberjs.com/v2.8.0/components/defining-a-component/" target="_blank">Defining a component</a>
			for more details. You need to use these only if you want to expand RP features.
			Templates live in templates/components directory and it's possible that a template will be enough for your needs
			and you won't need the JS file. A component template is enough to render it.
		</li>
		<li>
			<code class="format-code">controllers</code> - Definitions of RP controllers, see
			<a href="http://emberjs.com/api/classes/Ember.Controller.html" target="_blank">Ember.Controller</a>
			and <a href="https://guides.emberjs.com/v2.8.0/controllers/" target="_blank">Controllers</a>
			for more details. Each route has a matching controller. Even if you don't create a file for it,
			Ember will create controller in the memory. Templates live in <code class="format-code">templates/</code>
			directory and it's possible that a template will be enough for your needs and you won't need the JS file.
		</li>
		<li>
			<code class="format-code">helpers</code> - Helpers which are accessible in the templates, see
			<a href="http://emberjs.com/api/classes/Ember.Helper.html" target="_blank">Ember.Helper</a> and
			<a href="https://guides.emberjs.com/v2.8.0/templates/writing-helpers/" target="_blank">Writing helpers</a> for more details.
			Useful for logic that doesn't fit in a component.
		</li>
		<li>
			<code class="format-code">initializers</code> - Ember runs initializers before the app is started. See
			<a href="https://guides.emberjs.com/v2.8.0/applications/initializers/" target="_blank">Initializers</a> for more details.
		</li>
		<li>
			<code class="format-code">models</code> - We use them to mock the data that is normally
			returned from the DS API. They can be imported easily into routes or components.
		</li>
		<li>
			<code class="format-code">routes</code> - Handlers for routes specified in router.js, see
			<a href="http://emberjs.com/api/classes/Ember.Route.html" target="_blank">Ember.Route</a> and
			<a href="https://guides.emberjs.com/v2.8.0/routing/" target="_blank">Routing</a> for more details. You need to
			create a handler only if you have a custom logic for the route, like loading a model.
		</li>
		<li><code class="format-code">styles</code> - RP-specific styles. Don't put the DS styles in here.</li>
		<li>
			<code class="format-code">templates</code> - See
			<a href="https://guides.emberjs.com/v2.8.0/templates/handlebars-basics/" target="_blank">Handlebars basics</a> for details.
		</li>
		<li><code class="format-code">templates/base-styles</code> - templates for controllers with their routes matching <code class="format-code">base-styles/*</code></li>
		<li><code class="format-code">templates/components</code> - templates for components that live in <code class="format-code">components/</code> directory</li>
		<li><code class="format-code">templates/identity</code> - templates for controllers with their routes matching <code class="format-code">identity/*</code></li>
		<li><code class="format-code">templates/overview</code> - templates for controllers with their routes matching <code class="format-code">overview/*</code></li>
		<li><code class="format-code">templates/route-components</code> - templates for controllers with their routes matching <code class="format-code">components/*</code></li>
		<li><code class="format-code">templates/application.hbs</code> - the main template that is always used as the top one</li>
		<li>
			<code class="format-code">router.js</code> - Routes definitions, see
			<a href="https://guides.emberjs.com/v2.8.0/routing/defining-your-routes/" target="_blank">Defining your routes</a> for more details.
		</li>
	</ul>
</section>

{{> _footer}}
